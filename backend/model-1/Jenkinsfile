pipeline {
    environment {
        DOCKERHUB_CRED = credentials("DockerCredentials")
    }
    agent any
    tools {nodejs "NODEJS"} 
    stages {
        stage("Stage 1: Git Clone") {
            steps {
                // sh "rm -r SPE-FInal-Project"
                // sh "git clone https://github.com/Kushal7551/SPE-FInal-Project.git"
                git credentialsId: 'GitHub-Credentials', url: 'https://github.com/kushal7551/SPE-FInal-Project.git', branch: 'main'
                // sh "ls"
            }
        }
        stage('Stage 2 : Initialize') {
            steps {
                script {
                    sh "python3 -m venv venv"
                    // Install necessary Python packages
                    sh ". venv/bin/activate && pip install -r backend/model-1/requirements.txt"
                }
            }
        }
        stage('Stage 3 : Load and Preprocess Data') {
            steps {
                script {
                    // Run data loading script
                    sh ". venv/bin/activate && python3 backend/model-1/data_loading.py"
                }
            }
        }
        stage('Stage 4 :Train Model') {
            steps {
                script {
                    // Run model training script
                    sh ". venv/bin/activate && python3 backend/model-1/model_training.py"
                }
            }
        }
        stage('Stage 5 : Evaluate Model') {
            steps {
                script {
                    // Run model evaluation script
                    sh ". venv/bin/activate && python3 backend/model-1/model_evaluation.py"
                }
            }
        }
        stage('Stage 6 :Serve Model') {
            steps {
                script {
                    // Start FastAPI server in the background
                    sh 'start /B python3 backend/model-1/model_serving.py'
                    sleep time: 10, unit: 'SECONDS'
                }
            }
        }
        stage('Stage 7 :Test Serve Model') {
            steps {
                script {
                    // Test the server with sample values
                    sh '''
                        curl -X GET "http://127.0.0.1:8000/results"
                    '''
                }
            }
        }


        // stage("Stage 2: Backend Testing") {
        //     steps {
        //         sh '''
        //         cd backend
        //         npm i
        //         cd tests
        //         npm install mocha chai sinon
        //         npm test
        //         '''
        //     }
        // }

        // stage("Stage 3: Build frontend") {
        //     steps {
        //         sh '''
        //         cd Talent-Bridge/frontend
        //         npm install
        //         npm run build
        //         '''
        //     }
        // }

        // stage("Stage 4: Creating Docker Image for frontend") {
        //     steps {
        //         sh '''
        //         cd Talent-Bridge/frontend
        //         docker build -t shouryap1/frontend:latest .
        //         '''
        //     }
        // }

        // stage("Stage 5: Creating Docker Image for backend") {
        //     steps {
        //         sh '''
        //         cd Talent-Bridge/backend
        //         docker build -t shouryap1/backend:latest .
        //         '''
        //     }
        // }

        // stage("Stage 6: Push Frontend Docker Image") {
        //     steps {
        //         sh '''
        //         docker login -u ${DOCKERHUB_CRED_USR} -p ${DOCKERHUB_CRED_PSW}
        //         docker push shouryap1/frontend:latest
        //         '''
        //     }
        // }

        // stage("Stage 7: Push Backend Docker Image") {
        //     steps {
        //         sh '''
        //         docker login -u ${DOCKERHUB_CRED_USR} -p ${DOCKERHUB_CRED_PSW}
        //         docker push shouryap1/backend:latest
        //         '''
        //     }
        // }
    }
}
